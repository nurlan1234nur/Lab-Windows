[
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "FlightSystem.Models.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UserApiWithSQLite.Controllers.UsersController",
    "Method": "CreateUser",
    "RelativePath": "api/auth/user-add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "FlightSystem.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FlightSystem.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserApiWithSQLite.Controllers.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "api/auth/user-delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UserApiWithSQLite.Controllers.UsersController",
    "Method": "GetUserByPassport",
    "RelativePath": "api/auth/user-info-byPassport/{userPassportNumber}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userPassportNumber",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FlightSystem.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserApiWithSQLite.Controllers.UsersController",
    "Method": "GetUser",
    "RelativePath": "api/auth/user-info/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FlightSystem.Models.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserApiWithSQLite.Controllers.UsersController",
    "Method": "GetUsers",
    "RelativePath": "api/auth/user-list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightSystem.Models.User, FlightSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserApiWithSQLite.Controllers.UsersController",
    "Method": "UpdateUser",
    "RelativePath": "api/auth/user-update",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "FlightSystem.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystem.Controller.FlightInfoController",
    "Method": "GetFlightInfoList",
    "RelativePath": "api/flight-info/flight-info-list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightSystem.Models.FlightInfo, FlightSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightSystem.Controller.FlightInfoController",
    "Method": "UpdateFlightInfo",
    "RelativePath": "api/flight-info/flight-info-update",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flightInfo",
        "Type": "FlightSystem.Models.FlightInfo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystem.Controller.FlightInfoController",
    "Method": "GetFlightInfo",
    "RelativePath": "api/flight-info/flight-info/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FlightSystem.Models.FlightInfo",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.FlightController",
    "Method": "CreateFlight",
    "RelativePath": "api/flight/flight-add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "FlightSystem.Models.CreateFlightDto",
        "IsRequired": true
      },
      {
        "Name": "uId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.FlightController",
    "Method": "DeleteFlight",
    "RelativePath": "api/flight/flight-delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.FlightController",
    "Method": "GetFlights",
    "RelativePath": "api/flight/flight-list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightSystem.Models.Flight, FlightSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.FlightController",
    "Method": "UpdateFlight",
    "RelativePath": "api/flight/flight-update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createFlightDto",
        "Type": "FlightSystem.Models.CreateFlightDto",
        "IsRequired": true
      },
      {
        "Name": "uId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.FlightController",
    "Method": "GetFlight",
    "RelativePath": "api/flight/flight/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FlightSystem.Models.Flight",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.FlightController",
    "Method": "SearchFlights",
    "RelativePath": "api/flight/flights",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "origin",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "destination",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "date",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightSystem.Models.Flight, FlightSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.FlightController",
    "Method": "SearchFlights",
    "RelativePath": "api/flight/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "keyword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightSystem.Models.Flight, FlightSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.OrderController",
    "Method": "GetOrdersByCustomer",
    "RelativePath": "api/order/customer-orders/{customerPassport}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerPassport",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightSystem.Models.Order, FlightSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.OrderController",
    "Method": "CreateOrder",
    "RelativePath": "api/order/order-add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "order",
        "Type": "FlightSystem.Models.Order",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.OrderController",
    "Method": "DeleteOrder",
    "RelativePath": "api/order/order-delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.OrderController",
    "Method": "GetOrder",
    "RelativePath": "api/order/order-info/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "FlightSystem.Models.Order",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.OrderController",
    "Method": "GetOrders",
    "RelativePath": "api/order/order-list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[FlightSystem.Models.Order, FlightSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "FlightApiWithSQLite.Controllers.OrderController",
    "Method": "UpdateOrder",
    "RelativePath": "api/order/order-update",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "order",
        "Type": "FlightSystem.Models.Order",
        "IsRequired": true
      },
      {
        "Name": "uId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystem.Controller.SeatController",
    "Method": "GetSeats",
    "RelativePath": "api/Seat/{flightId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flightId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystem.Controller.SeatController",
    "Method": "GetAvailableSeats",
    "RelativePath": "api/Seat/available/{flightId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "flightId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystem.Controller.SeatController",
    "Method": "CancelReservation",
    "RelativePath": "api/Seat/cancel/{seatId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "seatId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystem.Controller.SeatController",
    "Method": "GetSeatById",
    "RelativePath": "api/Seat/detail/{seatId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "seatId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FlightSystem.Controller.SeatController",
    "Method": "ReserveSeat",
    "RelativePath": "api/Seat/reserve/{seatId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "seatId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "orderId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]