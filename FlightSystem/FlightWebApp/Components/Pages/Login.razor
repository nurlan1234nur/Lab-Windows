@page "/"

@using System.Net.Http.Json
@using FlightSystem.Models
@inject HttpClient Http
@inject IJSRuntime JS
@inject NavigationManager Navigation
@using FlightWebApp.Components.Pages

<PageTitle>Login</PageTitle>

<div class="LoginBox">
    <h3>Нислэгийн нэгдсэн систем!</h3>

    <EditForm Model="@loginModel" OnValidSubmit="CheckLogin" FormName="loginForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <p>И-мэйл</p>
        <InputText type="text" placeholder="И-мэйлээ оруулна уу" @bind-Value="loginModel.Email" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Email)" />

        <p>Нууц үг</p>
        <InputText type="password" placeholder="Нууц үгээ оруулна уу" @bind-Value="loginModel.Password" class="form-control" />
        <ValidationMessage For="@(() => loginModel.Password)" />

        <button type="submit" class="btn btn-primary mt-3">Login</button>
    </EditForm>
</div>

@code {
    private LoginDto loginModel = new LoginDto();

    private async Task CheckLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("http://192.168.216.1:5000/api/auth/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                if (result != null)
                {
                    // Хэрэглэгчийн мэдээллийг localStorage эсвэл session-д хадгалах боломжтой
                    // await JS.InvokeVoidAsync("localStorage.setItem", "userId", result.Id);

                    await JS.InvokeVoidAsync("alert", $"Амжилттай нэвтэрлээ. Welcome {result.Name}!");
                    Navigation.NavigateTo("/home");
                }
            }
            else
            {
                // Серверээс буцах message-г унших
                var errorMsg = await response.Content.ReadAsStringAsync();
                await JS.InvokeVoidAsync("alert", $"Login failed: {errorMsg}");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error: {ex.Message}");
        }
    }
}
